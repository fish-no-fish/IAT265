package movingobjects;

import java.awt.AlphaComposite;
import java.awt.Composite;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

/* BULLET class that handles, draws, and animates all ammos used in this application
 * CREATED: 11/11/2016
 * AUTHOR: HENRY ZHAO*/
public class Bullet extends MovingObjects{

	private int distanceRatio; //the ratio between the bullet and a target hitbox
	private int type; //type of ammo to be spawned
	private Rectangle2D.Double hitbox; //hitbox of the specific bullet spawned
	
	public Bullet(double posx, double posy, int type) {
		super(posx, posy);
		// TODO Auto-generated constructor stub
		this.type = type;
		if (type == 1)
		{
			try {
				avatar = ImageIO.read(getClass().getResourceAsStream("/assets/556.png"));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			width = 50*0.4;
			height = 200*0.4;
		}
		else if (type == 2)
		{
			try {
				avatar = ImageIO.read(getClass().getResourceAsStream("/assets/shotGunShell.png"));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			width = avatar.getWidth()*.25;
			height = avatar.getHeight()*.25;
		}
		angle = 0;
		hitbox = new Rectangle2D.Double();
	}
	
	public void handleProximity(MovingObjects target)
	{
		if (target != null)
		{
			int side;
			if (target.getX() - posx <= 0)
			{
				side = -1;
			}
			else
			{
				side = 1;
			}
			if (dist(target) < 500)
			{
				if (target instanceof Magazine)
//					find distance from bullet to magazine
					angle = side*90 * (1-(((Magazine) target).distMag(this))/500);
				else if (target instanceof ShotGun)
					angle = side*90 * (1-((ShotGun) target).distToChamber(this)/1000);
			}
		}
	}
	
//	public void handleProximityOfBox(Rectangle2D.Double hitbox)
//	{
//		if (hitbox != null)
//		{
//			int side;
//			if (hitbox.getX() - posx <= 0)
//			{
//				side = -1;
//			}
//			else
//			{
//				side = 1;
//			}
//			if (distOfBox(hitbox) <800)
//			{
//				angle = side*90 * (1-distOfBox(this)/500);			
//			}
//		}
//	}

	@Override
	public void draw(Graphics2D g2) {
		// TODO Auto-generated method stub
		hitbox.setFrame(posx-width/2, posy-height/2, width, height);
//		g2.fill(hitbox);
		old = g2.getTransform();
		oldC = g2.getComposite();
		g2.translate(posx, posy);
		if (type == 2)
		{
			g2.rotate(Math.toRadians(180));
		}
		g2.rotate(Math.toRadians(angle));
		opacity = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, initialOpacity);
		g2.setComposite(opacity);
//		g2.fillRect((int) -width/2, (int) -height/2, (int) width, (int) height);
		g2.drawImage(avatar, (int) -width/2, (int) -height/2, (int) width, (int) height, null);
		appear();
		g2.setComposite(oldC);
		g2.setTransform(old);
	}
	
	public Rectangle2D.Double getHitbox()
	{
		return hitbox;
	}
	
	

	@Override
	public void setPos(double x, double y) {
		// TODO Auto-generated method stub
		posx = x;
		posy = y;
	}
	
	

}
