package factory;

import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Rectangle;

import static main.GunRangePanel.*;

/* Factory used to generate status texts to report what is currently happening within the application.
 * 	corresponds to the dynamic moving texts cmoing from the top of the screen
 * CREATED: 11/23/2016
 * AUTHOR: HENRY ZHAO*/
public class TextFactory
{
	private Font font; //font object used for warning text
	private String text; //given text to be printed
	private Rectangle rect = new Rectangle(WIN_W/2, WIN_H + 20, WIN_W, 20); //invisible box used to center the printed text
	private double lifeTime = System.currentTimeMillis(); //initial spawn time, used to destroy the text object after 3 seconds
	private boolean initialized = false; //the initialization of the texts, getting its measurements
	private int x, y; //special altered positions for dynamic movement

	/* WHAT IT DOES: Constructor for the textfactory class
	 * PARAMETERS: 
	 * 	text - the desired text to be printed
	 * 	size - the desired size of the text
	 * RETURN: NONE*/
	public TextFactory(String text, int size) {
		// TODO Auto-generated method stub
		font = new Font("Arial", Font.BOLD, size);
		this.text = text;
	}
	
	public void draw(Graphics g)
	{
		g.setFont(font);
		if (initialized == false)
		{
			FontMetrics fontMeasure = g.getFontMetrics();
		    x = (rect.width - fontMeasure.stringWidth(text)) / 2;
//		    y = ((rect.height - fontMeasure.getHeight()) / 2) + fontMeasure.getAscent()*3;
		    y = 0;
		    initialized = true;
		}
	    if (System.currentTimeMillis() - lifeTime <= 500 && y < 80)
	    {
	    	y+=10;
	    	System.out.println(y);
	    	g.drawString(text, x, y);
	    }
	    else if (System.currentTimeMillis() - lifeTime <= 1500 && System.currentTimeMillis() - lifeTime >= 500)
	    {
	    	g.drawString(text, x, y);
	    }
	    else
	    {
	    	y-=10;
	    	g.drawString(text, x, y);
	    }
	}
	
	public double getLife()
	{
		return lifeTime;
	}
}
